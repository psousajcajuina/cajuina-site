---
//@ts-nocheck
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

import merge from "lodash.merge";
import type { ImageMetadata } from "astro";
import Layout from "@/layouts/PageLayout.astro";
import SinglePost from "@/components/blog/SinglePost.astro";
import ToBlogLink from "@/components/blog/ToBlogLink.astro";

import { getCanonical, getPermalink } from "@/utils/permalinks";
import { getStaticPathsBlogPost, blogPostRobots } from "@/utils/blog";
import { findImage } from "@/utils/images";
import type { MetaData } from "@/types";
import RelatedPosts from "@/components/blog/RelatedPosts.astro";

export const prerender = true;

export const getStaticPaths = (async () => {
  return await getStaticPathsBlogPost();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props as Props;

const url = getCanonical(getPermalink(post.permalink, "post"));
const image = (await findImage(post.image)) as
  | ImageMetadata
  | string
  | undefined;

// Valores padrão baseados no post
const defaultMetadata = {
  title: post.title,
  description: post.excerpt,
  canonical: url,
  robots: {
    index: blogPostRobots?.index ?? true,
    follow: blogPostRobots?.follow ?? true,
  },
  openGraph: {
    url: url,
    type: "article",
    locale: "pt_BR",
    ...(image
      ? {
          images: [
            {
              url: image,
              width: (image as ImageMetadata)?.width,
              height: (image as ImageMetadata)?.height,
            },
          ],
        }
      : {}),
  },
  twitter: {
    cardType: "summary_large_image",
  },
};

// Merge: valores padrão + metadata customizado do post
const metadata = merge(defaultMetadata, post?.metadata || {}) as MetaData;
---

<Layout metadata={metadata}>
  <SinglePost post={{ ...post, image: image }} url={url}>
    {
      post.Content ? (
        <post.Content />
      ) : (
        <Fragment set:html={post.content || ""} />
      )
    }
  </SinglePost>
  <ToBlogLink />
  <RelatedPosts post={post} />
</Layout>
