---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { CallToAction as Props } from '@/types';

export interface CallToAction {
  variant?: 'green' | 'yellow' | 'link';
  target?: string;
  text?: string;
  icon?: string;
  class?: string;
  type?: 'button' | 'submit' | 'reset';
  [key: string]: any;
}

const {
  variant = 'green',
  target,
  text = await Astro.slots.render('default'),
  icon = '',
  class: className = '',
  type,
  ...rest
} = Astro.props as CallToAction;

const variants = {
  green: 'btn-green',
  yellow: 'btn-yellow',
  link: 'cursor-pointer hover:text-primary',
};
---

{
  type === 'button' || type === 'submit' || type === 'reset' ? (
    <button
      type={type}
      class={twMerge(
        variants[variant] || '',
        'flex items-center justify-center text-center',
        className
      )}
      {...rest}
    >
      <Fragment set:html={text} />
      {icon && (
        <Icon
          name={icon}
          class="-mr-1.5 ml-1 inline-block h-5 w-5 rtl:mr-1 rtl:-ml-1.5"
        />
      )}
    </button>
  ) : (
    <a
      class={twMerge(
        variants[variant] || '',
        'flex items-center justify-center text-center',
        className
      )}
      {...(target ? { target, rel: 'noopener noreferrer' } : {})}
      {...rest}
    >
      <Fragment set:html={text} />
      {icon && (
        <Icon
          name={icon}
          class="rtl.-ml-1.5 -mr-1.5 ml-1 inline-block h-5 w-5 rtl:mr-1"
        />
      )}
    </a>
  )
}
