---
import { getCollection } from 'astro:content';
import type { ImageMetadata } from 'astro';
import SwiperLayout from './ui/SwiperLayout.astro';
import BannerSwiper from './react/BannerSwiper';

interface CTAButton {
  text: string;
  url: string;
  variant: 'primary' | 'secondary' | 'outline';
}

interface BannerData {
  title: string;
  subtitle?: string;
  description?: string;
  image: ImageMetadata;
  imageMobile?: ImageMetadata;
  cta?: CTAButton;
  textPosition: 'left' | 'center' | 'right';
  textAlign: 'top' | 'middle' | 'bottom';
  overlay: boolean;
  order: number;
  active: boolean;
  publishDate?: Date;
  expireDate?: Date;
}

interface Banner {
  data: BannerData;
  id: string;
}

const now = new Date();
const allBanners = (await getCollection('banner')) as Banner[];

const banners = allBanners
  .filter((banner): banner is Banner => {
    if (!banner.data.active) return false;
    if (banner.data.publishDate && banner.data.publishDate > now) return false;
    if (banner.data.expireDate && banner.data.expireDate < now) return false;
    return true;
  })
  .sort((a, b) => a.data.order - b.data.order);

// Transformar dados para o componente React
const bannersForReact = banners.map((banner) => ({
  ...banner,
  data: {
    ...banner.data,
    image: banner.data.image.src,
    imageMobile: banner.data.imageMobile?.src,
  },
}));

const hasBanners = banners.length > 0;
---

{
  hasBanners && (
    <SwiperLayout>
      <BannerSwiper banners={bannersForReact} client:only="react" />
    </SwiperLayout>
  )
}
