---
import { Icon } from 'astro-icon/components';
// import { SITE } from 'astrowind:config';
// import { getHomePermalink } from '@/utils/permalinks';
import { findImage } from '@/utils/images';
import type { ImageType } from '../common/Image.astro';
import {
  astroAssetsOptimizer,
  getImagesOptimized,
  isUnpicCompatible,
  unpicOptimizer,
} from '@/utils/images-optimization';
import Image from '../common/Image.astro';

import footerBg from '@/assets/images/mobile/footer.png';
import logoColorida from '@/assets/images/logo-colorida.png';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  footNote?: string;
  theme?: string;
}

const _image = await findImage(footerBg);
let image: ImageType | undefined = undefined;

if (
  typeof _image === 'string' &&
  (_image.startsWith('http://') || _image.startsWith('https://')) &&
  isUnpicCompatible(_image)
) {
  image = await getImagesOptimized(_image, {}, unpicOptimizer);
} else if (_image) {
  image = await getImagesOptimized(_image, {}, astroAssetsOptimizer);
}

const { socialLinks = [], links = [], footNote = '' } = Astro.props;
---

<footer
  style={`background-image: url(${image?.src});`}
  class:list={[
    'relative max-h-[546px] w-full bg-contain bg-center',
    'space-y-3 py-8',
  ]}
>
  <!-- Grid -->
  <div
    class="grid grid-cols-3 grid-rows-4 items-center justify-start gap-5 md:grid-cols-3 md:grid-rows-4 lg:grid-cols-3 lg:grid-rows-4"
  >
    <!-- Social -->
    <div class="col-span-1 row-span-4 items-center justify-between">
      <div class="social-wrapper relative flex flex-col items-center gap-1">
        {
          socialLinks.map(({ ariaLabel, href, text, icon }) => (
            <a
              class="text-muted bg-caju-heading-yellow inline-flex h-fit w-fit items-center rounded-full p-1 text-sm"
              aria-label={ariaLabel}
              href={href}
            >
              {icon && <Icon name={icon} class="h-5 w-5 text-white" />}
              <Fragment set:html={text} />
            </a>
          ))
        }
        <!-- Separador amarelo -->
        <div
          class="bg-caju-heading-yellow absolute top-1/2 right-2 h-[80%] w-1 -translate-y-1/2"
        >
        </div>
      </div>
    </div>
    <!-- Links -->
    <div class="col-span-2 row-span-4 grid gap-5">
      {
        links.map(({ title, links }, index) => (
          <div class="flex flex-col">
            <h5 class="text-caju-heading-yellow text-sm uppercase">{title}</h5>
            <ul class="font-inter text-xsm grid grid-cols-2 grid-rows-3 gap-2">
              {links.map(({ href, text, ariaLabel }) => (
                <li
                  class:list={[
                    { 'col-span-2': links.length <= 3 },
                    { 'row-span-3': index === 1 },
                  ]}
                >
                  <a
                    class="hover:text-caju-secondary-orange text-white"
                    href={href}
                    aria-label={ariaLabel}
                  >
                    {text}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>
  </div>

  <!-- Footnote -->
  <div class="flex flex-col items-center gap-2">
    <!-- <div class="relative h-full w-full"> -->
    <Image
      class="h-[94px] w-[157px]! object-cover"
      aspectRatio="157:94"
      width={157}
      height={94}
      src={logoColorida}
      alt="SÃ£o geraldo"
    />
    <!-- </div> -->
    <div class="text-xxs font-inter text-center leading-[140%] text-white">
      <Fragment set:html={footNote} />
    </div>
  </div>
</footer>
