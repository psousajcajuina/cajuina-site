name: Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite trigger manual
    inputs:
      deployment_method:
        description: 'Método de deploy'
        required: true
        default: 'ssh'
        type: choice
        options:
          - ssh
          - ftp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.12.3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.18.0'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build
      run: pnpm build

    # Deploy via SSH (padrão no push)
    - name: Deploy via SSH/rsync
      if: github.event_name == 'push' || github.event.inputs.deployment_method == 'ssh'
      uses: burnett01/rsync-deployments@7.0.1
      with:
        switches: -avzr --delete --exclude='.git*' --exclude='node_modules/' --exclude='.github/'
        path: ./dist/
        remote_path: ${{ vars.FTP_REMOTE_PATH }}
        remote_host: ${{ vars.SSH_HOST }}
        remote_user: ${{ vars.SSH_USER }}
        remote_key: ${{ vars.SSH_PRIVATE_KEY }}
        remote_port: ${{ vars.SSH_PORT }}

    # Deploy via FTP (manual)
    - name: Deploy via FTP
      if: github.event.inputs.deployment_method == 'ftp'
      uses: modern-dev/ftp-mirror@v2
      with:
        server: ${{ vars.FTP_SERVER }}
        user: ${{ vars.FTP_USER }}
        password: ${{ vars.FTP_PASSWORD }}
        local_dir: "./dist"
        remote_dir: ${{ vars.FTP_REMOTE_PATH }}
        delete: "true"
        parallel: "10"
        force_ssl: "false"
        timeout: "600"